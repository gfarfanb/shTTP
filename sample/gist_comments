#! /usr/bin/env bash
#  -author Giovanni Farf√°n B.

before_api() {
    :
}

#  External command:
#  ./gist_comments post_authorization --auth-basic gfb --set otp <2fa-token>
post_authorization() {
    basePath "/authorizations"
    headers "X-GitHub-OTP: $( get otp )"
    body "{
            \"scopes\": [
                \"public_repo\"
            ],
            \"note\": \"execute shTTP samples\",
            \"client_id\": \"$( get clientId )\",
            \"client_secret\": \"$( get clientSecret )\"
        }"
}

after_post_authorization() {
    isTrue "Empty authorization token" "-n \"$( getOutput token )\""
    put 'token' '.hashed_token'
}

get_all() {
    basePath "/gists/$( get gistId )/comments"
}

get_comment() {
    endpoint "$( get gistId )/comments/$( get commentId )"
}

before_post_comment() {
    :
}

post_comment() {
    basePath "/gists/$( get gistId )/comments"
    headers \
        "Authorization: token $( get token )"
    body '{ "body": "shTTP-samples comment" }'
}

after_post_comment() {
    isTrue "Id not found" "\"$( getOutput id )\" != \"null\""
    put commentId '.id'
}

patch_comment() {
    endpoint "$( get gistId )/comments/$( get commentId )"
    body '{ "body": "shTTP comment update" }'
}

delete_comment() {
    endpoint "$( get gistId )/comments/$( get commentId )"
}

after_api() {
    :
}

flow_comments() {
    :
}

#  shellcheck disable=SC1091
. ../http_api
