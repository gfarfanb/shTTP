#! /usr/bin/env bash
#  Mock service configurator.
#  -author Giovanni Farf√°n B.
set -euo pipefail
IFS=$'\n\t'


#  Check installation and
#+ stop service.
nginx -v
service nginx stop


#  Copy services files.
readonly _nginx_share="/usr/share/nginx/"
if ! [ -d "${_nginx_share}shttp_mock" ]; then
    mkdir "${_nginx_share}shttp_mock"
fi
cp srv/* "${_nginx_share}shttp_mock/"


#  Set-up Nginx server
readonly _srv_location="${_nginx_share}shttp_mock"
readonly _mock_conf="shttp_mock.conf"
readonly _nginx_available="/etc/nginx/sites-available/"
readonly _nginx_enabled="/etc/nginx/sites-enabled/"

# Clean-up last files in available sites
rm -rf "${_nginx_available}shttp"*

#  Copy server configuration
cp $_mock_conf $_nginx_available

#  Put correct service location
sed -i -e "s|{{_shttp_srv_location}}|$_srv_location|g" $_nginx_available$_mock_conf

# Clean-up last files in enabled sites
rm -rf "${_nginx_enabled}shttp"*

#  Enable site by creating a symbolic link
ln -s $_nginx_available$_mock_conf $_nginx_enabled


#  Check configuration and
#+ restart service.
nginx -t
service nginx restart


#  Validate set-up
readonly _nginx_ping_status=$( curl -o /dev/null \
    -sw '%{http_code}' \
    http://127.0.0.1:5555/info
)
if [ "$_nginx_ping_status" = "200" ]; then
    printf "\r%*s\r%s\n" "$(tput cols)" "[ OK ] " "setup_mock: Mock services correctly set-up";
else
    printf "\r%*s\r%s\n" "$(tput cols)" "[ FAILED ] " "setup_mock: Mock services set-up failed";
    exit 1
fi
