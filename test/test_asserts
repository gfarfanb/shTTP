#! /usr/bin/env bash
#  Assert functions for unit tests.
#  This is imported by 'test_runner'.
#  Functions '_fail' and '_inc_asserts'
#+ are visible because 'test_runner'.
#  -author Giovanni Farf√°n B.


#  Fails the test immediately.
#  Increase the '_failures' and
#+ '_assertions' counts.
#
#  -param $1 Fail message
fail() {
    _fail "$*"
    _inc_asserts
}

#  Assert that a given shell
#+ condition is true.
#
#  -param $1 Fail message
#  -param $2 Test condition content:
#+           '[ <$2> ]'
assertTrue() {
    local _message=${1:-}
    local _condition=${2:-}
    local _ok=1
    eval "if ! [ $_condition ]; then _ok=0 ; fi"
    if [ $_ok = 0 ]; then
        _fail "[ $_condition ]: $_message"
    fi
    _inc_asserts
}

#  Assert that a given shell
#+ condition is false.
#
#  -param $1 Fail message
#  -param $2 Test condition content:
#+           '! [ <$2> ]'
assertFalse() {
    local _message=${1:-}
    local _condition=${2:-}
    local _ok=1
    eval "if [ $_condition ]; then _ok=0 ; fi"
    if [ $_ok = 0 ]; then
        _fail "! [ $_condition ]: $_message"
    fi
    _inc_asserts
}

#  Assert that expected and actual
#+ are equal to one another.
#
#  -param $1 Fail message
#  -param $2 Expected value
#  -param $3 Actual value
assertEquals() {
    local _message=${1:-}
    local _expected=${2:-}
    local _actual=${3:-}
    if [ "$_expected" != "$_actual" ]; then
        _fail "[ $_expected = $_actual ]: $_message"
    fi
    _inc_asserts
}

#  Assert that unexpected and actual
#+ are not equal to one another.
#
#  -param $1 Fail message
#  -param $2 Expected value
#  -param $3 Actual value
assertNotEquals() {
    local _message=${1:-}
    local _expected=${2:-}
    local _actual=${3:-}
    if [ "$_expected" = "$_actual" ]; then
        _fail "[ $_expected != $_actual ]: $_message"
    fi
    _inc_asserts
}

#  Assert that actual is
#+ equals to null.
#
#  -param $1 Fail message
#  -param $2 Actual value
assertIsNull() {
    local _message=${1:-}
    local _actual=${2:-}
    if [ "$_actual" != "null" ]; then
        _fail "[ $_actual != null ]: $_message"
    fi
    _inc_asserts
}

#  Assert that actual is
#+ not equals to null.
#
#  -param $1 Fail message
#  -param $2 Actual value
assertNonNull() {
    local _message=${1:-}
    local _actual=${2:-}
    if [ "$_actual" = "null" ]; then
        _fail "[ $_actual = null ]: $_message"
    fi
    _inc_asserts
}
