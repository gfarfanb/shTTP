#! /usr/bin/env bash
#  Tests for 'http_api' option functions.
#  -author Giovanni FarfÃ¡n B.


#  -test List available commands
_commands=( $( _list_commands ) )
_found=0
for _command in "${_commands[@]}"; do
    case "$_command" in
        info | warning | error | fatal)
            _found=$(( _found+1 ))
        ;;
    esac
done

assertEquals "Command not found" 4 "$_found"


#  -test Look for parameters
_previous_value="last"
_previous_length=0
_callback_function() {
    local _new=${1:-''}
    local _length=$#
    _previous_value="$_new"
    _previous_length=$_length
}
_look_for_params "_callback_function" "--new" "command" "--new" "new" "--save" "key" "\"value\""

assertEquals "Invalid parameter value" "new" "$_previous_value"
assertEquals "Invalid parameters length" 1 "$_previous_length"


#  -test Set option
_set_config "priorityVal" "value"
put priorityVal "\"new.value\""
_priority_val=$( get priorityVal )
assertEquals "Unexpected 'setConfig' value" "value" "$_priority_val"


#  -test Add option
_add_config "addedVal" "\"value\""
_added_val=$( get addedVal )
assertEquals "'addedVal' not found" "value" "$_added_val"


#  -test Get option
put expectedVal "\"value\""
_expected_val=$( _get_config "expectedVal" )
assertEquals "'expectedVal' not found" "value" "$_expected_val"


#  -test Remove option
put removedVal "\"value\""
_remove_config "removedVal"
_null_val=$( get removedVal )
assertEquals "'removedVal' found" "null" "$_null_val"


#  -test Get keys option
put namedKey -1
_keys=( $( _get_config_keys ) )
_found=0
for _key in "${_keys[@]}"; do
    if [ "$_key" = "namedKey" ]; then
        _found=1
        break;
    fi
done

assertEquals "'namedKey' key not found" 1 "$_found"


#  -test Host option
_set_host "any.host"
_current_host=$( get host )
assertEquals "'Host' not assigned" "any.host" "$_current_host"

_host_object="{ \"key\": \"namedHost\", \"value\": \"any.named.host\" }"
update "ws/config.json" ". + { \"hosts\": [$_host_object] }"
_set_host "namedHost"
_current_host=$( get host )
assertEquals "Named 'Host' not assigned" "any.named.host" "$_current_host"


#  -test Local option
_set_localhost "5555"
#  shellcheck disable=SC2154
assertEquals "Localhost not assigned" "localhost:5555" "$_shttp_domain"


#  -test Header authentication option
_auth_header
#  shellcheck disable=SC2154
assertEquals "'HEADER' not assigned" "HEADER" "$_shttp_auth_mode"


#  -test Authentication by query parameters option
_auth_qparam
#  shellcheck disable=SC2154
assertEquals "'QPARAM' not assigned" "QPARAM" "$_shttp_auth_mode"


#  -test Open editor option
put editorCommand "\"vi results.json\""
_open_editor
#  shellcheck disable=SC2154
assertEquals "'_shttp_editor_command' not assigned" "vi results.json" "$_shttp_editor_command"


#  -test Clean option
echo '{}' > output/cleanable_output.json

_clean_output_files

assertFalse "Output file is currently exists" "-f output/cleanable_output.json"
