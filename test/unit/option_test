#! /usr/bin/env bash
#  Tests for 'http_api' option functions.
#  -author Giovanni FarfÃ¡n B.


#  -test List available commands
_commands=$( _list_commands )
_found=0
for _i in "${_commands[@]}"; do
    [ "$_i" = "fail" ] && _found=1
done

assertEquals "Command not found" 1 "$_found"


#  -test Set option
_set_config "--set" "priorityVal" "value"
put priorityVal "\"new.value\""
_priority_val=$( get priorityVal )
assertEquals "Unexpected 'setConfig' value" "value" "$_priority_val"


#  -test Add option
_add_config "--add" "addedVal" "\"value\""
_added_val=$( get addedVal )
assertEquals "'addedVal' not found" "value" "$_added_val"


#  -test Get option
put expectedVal "\"value\""
_expected_val=$( _get_config "--get" "expectedVal" )
assertEquals "'expectedVal' not found" "value" "$_expected_val"


#  -test Remove option
put removedVal "\"value\""
_remove_config "--remove" "removedVal"
_null_val=$( get removedVal )
assertEquals "'removedVal' found" "null" "$_null_val"


#  -test Get keys option
_get_config_keys


#  -test Host option
_set_host "command" "--host" "any.host"
_current_host=$( get host )
assertEquals "'Host' not assigned" "any.host" "$_current_host"

_host_object="{ \"key\": \"namedHost\", \"value\": \"any.named.host\" }"
update "ws/config.json" ". + { \"hosts\": [$_host_object] }"
_set_host "command" "--host" "namedHost"
_current_host=$( get host )
assertEquals "Named 'Host' not assigned" "any.named.host" "$_current_host"


#  -test Local option
_set_localhost "command" "--local" "5555"
assertEquals "Localhost not assigned" "localhost:5555" "$DOMAIN"


#  -test Header authentication option
_auth_header
assertEquals "'HEADER' not assigned" "HEADER" "$AUTH_MODE"


#  -test Authentication by Query Parameters option
_auth_qparam
assertEquals "'QPARAM' not assigned" "QPARAM" "$AUTH_MODE"


#  -test Open editor option
put editorCommand "\"vi results.json\""
_open_editor
assertEquals "'EDITOR_COMMAND' not assigned" "vi results.json" "$EDITOR_COMMAND"


#  -test Clean option
echo '{}' > output/cleanable_output.json

_clean_output_files

assertFalse "Output file is currently exists" "-f output/cleanable_output.json"
